<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Making charts with python matplotlib]]></title>
    <url>%2F2018%2F01%2F08%2FMaking-charts-with-python-matplotlib%2F</url>
    <content type="text"><![CDATA[About matplotlibMatplotlib is a python plotting library which can help generate plots, and charts. InstallationInstall python3 matplotlib on my Ubuntu 16.04 box1$ sudo apt install python3-matplotlib Creating a simple chart in python shell123456789101112$ python3Python 3.5.2 (default, Nov 23 2017, 16:37:01) [GCC 5.4.0 20160609] on linuxType "help", "copyright", "credits" or "license" for more information.&gt;&gt;&gt; import matplotlib.pyplot as plt&gt;&gt;&gt; plt&lt;module 'matplotlib.pyplot' from '/usr/lib/python3/dist-packages/matplotlib/pyplot.py'&gt;&gt;&gt;&gt; x = range(10) # create X coordinate data&gt;&gt;&gt; y = [ i*i for i in x ] # create Y coordinate data with square of data on X.&gt;&gt;&gt; plt.plot(x, y)[&lt;matplotlib.lines.Line2D object at 0x7f4f7d4433c8&gt;]&gt;&gt;&gt; plt.show() Then I got the chart Creating a bar chartNext I wrote a script to generate a bar chart of the average monthly high temperature of San Francisco.1234567891011121314151617181920212223import matplotlib.pyplot as pltdef main(): print('This program will generate a bar chart of the monthly average high temperature of San Francisco') # Create the list of X and Y cordinate data left_edges = [ i for i in range(12)] temperature = [57, 60, 62, 63, 64, 66, 67, 68, 70, 69, 63, 57] bar_width = 0.3 plt.bar(left_edges, temperature, bar_width, color=('r','g','b','r','k','r','g','b','r','k','r','g')) # Add a title plt.title('San Francisco Climate Graph-Chart') # Add the label to the axes plt.xlabel('Month') plt.ylabel('Average High Temperature') # Customize the tick marks months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'] plt.xticks(left_edges, months) plt.yticks([50, 55, 60, 65, 70, 75], ['50F', '55F', '60F', '65F', '70F', '75F']) # Add a grid plt.grid(True) # Display the bar chart graph plt.show()main() Then I got the bar chart Creating a pie chartThis script I wrote generates a pie chart of the Population for California by race in 2017 and 2016123456789101112131415import matplotlib.pyplot as pltdef main(): print('This program will generate a pie chart of Population for California by race in 2017 and 2016') values = [21454, 14014, 2299, 4861, 363, 8600] plt.pie(values) slice_label = ['White', 'Hispanic', 'Black', 'Asian', 'American Indian', 'Others'] # Add a title plt.title('Population for California by race in 2017 and 2016') # Add the label to the axes plt.pie(values, labels=slice_label) # save the chart image plt.savefig('pie_chart.png') # Display the pie chart graph plt.show()main() The pie chart I got Save the chart to a image fileJust use the savefig() method.1plt.savefig('bar_chart.png')]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Decorating my blog with Hexo - theme, features, tips]]></title>
    <url>%2F2017%2F12%2F21%2FDecorating-my-blog-with-Hexo-theme-and-more-featurs%2F</url>
    <content type="text"><![CDATA[Change hexo blog theme - NexTChange to hexo blog theme NexT which has neat look and supports a lot cool features.Download the theme1$ git clone https://github.com/iissnan/hexo-theme-next themes/next Edit blog configuration file _config.yml, change to theme from the default langscape to next1theme: next Edit theme configuration file themes/next/_config.yml, change list scheme from default Muse to Pisces, see more about NexT theme scheme1234# Schemes#scheme: Muse#scheme: Mistscheme: Pisces I prefer the scheme Pisces because it has menu and links and other stuff showing on left side of the blog content. Add blog owner avatarI’d like my avatar showing up in my blog, and I have avatar uploaded to my github account.Locate the avatar image link of my github account, mine is https://avatars0.githubusercontent.com/u/34552097 Edit blog configuration file _config.yml, add a line in # Site section1avatar: https://avatars0.githubusercontent.com/u/34552097 Create categories page, tags page, and about pagecreate categories page12$ hexo new page &quot;categories&quot;INFO Created: ~/vmnet8.github.io/source/categories/index.md Edit source/categories/index.md, set page type to “categories”, change title to “Categories”123title: Categoriesdate: 2017-12-17 22:39:34type: categories create tags page12$ hexo new page &quot;tags&quot;INFO Created: ~/vmnet8.github.io/source/tags/index.md Edit source/tags/index.md, set type to “tags”, change title to “Tags” create about page12$ hexo new page &quot;about&quot;INFO Created: ~/vmnet8.github.io/source/about/index.md Edit source/about/index.md, change title to “About me”, and add description of about myself.12345---title: About Medate: 2017-12-18 11:41:02---My name is Anna X. Edit theme configuration file themes/next/_config.yml, enable categories, tags, and about menu.123456menu: home: / || home about: /about/ || user tags: /tags/ || tags categories: /categories/ || th archives: /archives/ || archive Edit the post source/_post/1st-blog.md, add categories and tags1234567title: 1st blogdate: 2017-12-17 21:36:48tags: - blog - hexocategories: - life Enable social linksEdit theme configuration file, themes/next/_config.yml, enable social links, change icons_only from false to true.1234567891011121314151617social: GitHub: https://github.com/vmnet8 || github E-Mail: mailto:vmnet8@gmail.com || envelope #Google: https://plus.google.com/yourname || google #Twitter: https://twitter.com/username || twitter #FB Page: https://www.facebook.com/yourname || facebook #VK Group: https://vk.com/yourname || vk #StackOverflow: https://stackoverflow.com/yourname || stack-overflow #YouTube: https://youtube.com/yourname || youtube #Instagram: https://instagram.com/yourname || instagram #Skype: skype:yourname?call|chat || skype Linkedin: https://www.linkedin.com/in/anna_x/ || linkedinsocial_icons: enable: true icons_only: true transition: false Add RSSInstall hexo-generator-feed plugin1$ npm install hexo-generator-feed --save Edit blog configuration file _config.yml1234567type: atompath: atom.xmllimit: 20hub:content:content_limit: 140content_limit_delim: &apos; &apos; Adding image to blog postI’d like the image for a blog post to be in a blog post specific folder, so I enabled the “post_asset_folder”Edit blog configuration file _config.yml1post_asset_folder: true When I do “hexo new ‘My 1st blog’”, a blog specific asset folder named “My-1st-blog” will be created under source/_post along with the post markdown file My-1st-blog.md . Copy the image file ‘penguins.png’ to source/_post/My-1st-blogEdit source_post/My-1st-blog.md, reference the image in the markdown file like this12This is my first blog post.&#123;% asset_img example.png This is an example image %&#125; Enable post comment with disqusSign up https://disqus.com/, you can sign up with twitter, facebook, or google account. On next step, choose “I want to install Disqus on my site”, mark the shortname of the site. My shortname is annax NexT theme already supports disqus, edit theme configuration theme/next/_config.yml1234disqus: enable: true shortname: annax count: true Then each blog post, and about page, and tags page will have adding comment embeded below the content.If you want to disable comment for specific page or post, add “comments: false” to post/page front-matterFor me, I disable comment for tags page. Page and site view countEnable busuanzi_count in theme next configuration file, edit theme/next/_config.yml123busuanzi_count: # count values only if the other configs are false enable: true Then the blog home page will have site view count at the bottom and each post page will have post view count at the bottom. Enable local searchInstall hexo-generator-searchdb plugin1$ npm install hexo-generator-searchdb --save Edit blog configuration file _config.yml, add12345search: path: search.xml field: post format: html limit: 10000 Edit theme configuration file theme/next/_config.yml12local_search: enable: true Then the blog menu will have a “search” button TipsIf the blog is too long and you don’t want the whole blog content show in the blog home page, add a line to blog post markdown file where you want to insert a “Read more” button.1&lt;!--more--&gt;]]></content>
      <tags>
        <tag>blog</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[First blog - Setting up my github pages blog with Hexo]]></title>
    <url>%2F2017%2F12%2F21%2FFirst-blog-Setting-up-my-github-pages-blog-with-Hexo%2F</url>
    <content type="text"><![CDATA[IntroductionGithub pagesGithub pages is a github service that can host personal or project web pages directly from a github repository. This is ideal place to host my blog site because it is fast, and I will have a github.io domain, and there are some really cool blog frameworks that support deploying blog site to Github Pages. HexoThe most popular blog framework that supports github pages is Jekyll It seems, because it is officially recommended by github. But I found another framework Hexo, which compared to Jekyll, is similar but much easier to use, I only need to know 4 commands,1234hexo n # new posthexo g # generatehexo s # serverhexo d # deploy After I checked out some Hexo built blog sites, I decied to go with Hexo. Hexo is wirtten in node.js, and it supports a lot powerfull plugins and has cool themes. Install HexoFollow Hexo doc Set up Github PagesCreate github pages repository on github.com, the repository name is vmnet8.github.io where vmnet8 is my github account. Install and configure Git which Hexo requiresInstall git. I am coding and will be blogging on my Ubuntu Linux, to use Hexo to deploy my blog site to github pages, I need to install and configure git first. Install:1$ sudo apt install git Configure git with github123$ git config --global user.name &quot;Anna X&quot;$ git config --global user.email &quot;vmnet8@gmail.com&quot;$ git config --list Add my ssh public key to github. I will have Hexo deploy to github pages over ssh without asking username and password. Install Node.jsFollow node.js docInstall node.js using package manager - APT12$ curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -$ sudo apt install -y nodejs As of 12/21/2017, node.js version is v8.9.312$ node -vv8.9.3 Install hexo-cliFollow Hexo doc1sudo npm install -g hexo-cli As of 12/21/2017, hexo version 3.4.31234567891011121314151617$ hexo versionhexo: 3.4.3hexo-cli: 1.0.4os: Linux 4.4.0-103-generic linux x64http_parser: 2.7.0node: 8.9.3v8: 6.1.534.48uv: 1.15.0zlib: 1.2.11ares: 1.10.1-DEVmodules: 57nghttp2: 1.25.0openssl: 1.0.2nicu: 59.1unicode: 9.0cldr: 31.0.1tz: 2017b Build my blog using HexoInitialize my blog folderFollow Hexo setup doc, I use “vmnet8.github.io” as my blog folder.123$ hexo init vmnet8.github.io$ cd vmnet.github.io/$ npm install Basic blog site configurationEdit blog configuration file _config.yml in blog folder.1234567# Sitetitle: Anna&apos;s blogsubtitle: My tech blogdescription:author: Anna Xlanguage: entimezone: America/Los_Angeles Note that when editing _config.yml file which is YAML format file, for key-value pairs format like “key: value”, there should be a space after “:”, same for sequence item, there should be a space after “-“ Create blog post using HexoCreate my first blog post12$ hexo new "1st blog"INFO Created: ~/vmnet8.github.io/source/_posts/1st-blog.md Edit the blog post file 1st-blog.md1$ vi source/_post/1st-blog.md The blog post .md file is markdown format file with a header called “Front matter”12345---title: 1st blogdate: 2017-12-21 12:44:07---This is my first blog post. The front matter is YAML format .The blog content below front matter is markdown format which is a lightweight markup language with plain text formatting syntax. It is designed so that it can be converted to HTML. When creating blog folder using “hexo init”, a sample blog post source/_posts/hello-world.md will be created automatically, you can cat it for reference. Test blog postRun “hexo g” to generate the static html files and “hexo server” to start http service on port 4000 for blog access.1234$ hexo g$ hexo sINFO Start processingINFO Hexo is running at http://localhost:4000/. Press Ctrl+C to stop. Then go to http://localhost:4000/ in browser.Notes: Every time you run hexo command, you current dir should be the hexo blog folder. Note: every time you make change to the configuration file or any page or post, you need to do “hexo g” to generate the new static html files. If something wrong happens due to wrong syntax in yml configuration file or md markdown file, you may need to do “hexo clean” and then “hexo g” to re-generate all blog html files. Deploy blog to github pagesFollow Hexo deployment docInstall git hexo deployer plugin.1npm install hexo-deployer-git --save Note: When you install hexo module by “npm install –save”, your current dir should also be the blog fold. Configure deployment to higthub, edit blog configuration file _config.yml in blog folder1234deploy: type: git repo: git@github.com:vmnet8/vmnet8.github.io.git branch: master I use ssh instead of https for my github pages repository access for Hexo, so I won’t need to enter username/password for deployment to github. Deploy to github pages1$ hexo d Then go to my github pages https://vmnet8.github.io in browser.]]></content>
      <tags>
        <tag>blog</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F12%2F19%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
